******************
PROCEDURE V_PED_NR
******************
PARAMETER TIPO_VEN

IF TIPO_VEN='V.CO.'
  IF .NOT. V_USRAUT(USER,"FACTURAS",2) 
    RETURN
  ENDIF
ENDIF
  
IF .NOT. V_USRAUT(USER,"NOTAS_REM",2) .OR. .NOT. V_USRAUT(USER,"PEDIDOS",2)
  RETURN
ENDIF

*OBTENEMOS NRO DE DOSIFICACION ACTIVO
NRODOSIF=V_GETNDO()

SELECT V_TC
SEEK DTOS(V_PED_HD.HP_FECHA)
IF .NOT. EOF()
  TIPO_C=TC_MONTO
ELSE
  MENSAJE1='TIPO DE CAMBIO PARA ESTE DIA NO SE ENCONTRO EN LA TABLA' 
  MENSAJE2='PROFORMA NO PUEDE SER ELABORADA'
  DO V_MENSAJ.SPR
  RETURN
ENDIF  

IF .NOT. V_PED_HD.HP_ESTADO$'PI'
  RETURN
ENDIF

SELECT 5 && E
USE V_DOC_HD ORDER NR            &&CORRE=EMPR+TIPO+NRO
SET RELATION TO HD_EMPR INTO V_EMPR
SET RELATION TO HD_EMPR+HD_COD_VEN INTO V_VENDOR ADDITIVE

SELECT 6 && F
USE V_DOC_LN ORDER NR            &&CORRE=EMPR+TIPO+NRO

SELECT V_PED_HD

*VERIFICAMOS SI PROXIMO NUMERO EN V_CORRE PARA NR y/o FACTURA YA EXISTE
IF v_vndupl('NRC',0) 
	SELECT V_DOC_HD
	USE
	SELECT V_DOC_LN
	USE
	SELECT V_PED_HD
    RETURN
ENDIF

IF TIPO_VEN='V.CO.'
	SELECT 15
	USE V_FAC_HD ORDER CORRE
	IF v_vndupl('FAC',NRODOSIF)
		SELECT V_FAC_HD
		USE
		SELECT V_PED_HD
    	RETURN
    ENDIF
ENDIF

ON KEY LABEL F10 KEYBOARD CHR(23)

DEFINE WINDOW NR_HD FROM 0, 0 TO 8,79 TITLE "PEDIDO -> NOTA DE REMISION" ;
NOFLOAT DOUBLE 

VENDEDOR=SPACE(20)
ALMACEN =SPACE(20)

PESO_U=0

SELECT V_DOC_HD
APPEND BLANK
IF LOCK()
  REPLACE HD_EMPR     WITH V_PED_HD.HP_EMPR
  REPLACE HD_NRO      WITH V_PED_HD.HP_NRO
  REPLACE HD_USUARIO  WITH USER
  REPLACE HD_TIPO     WITH 'P'
  REPLACE HD_FECHA    WITH DATE()
  REPLACE HD_COD_VEN  WITH V_PED_HD.HP_COD_VEN
  REPLACE HD_OBS      WITH V_PED_HD.HP_OBS
  REPLACE HD_LUGENT   WITH V_PED_HD.HP_LUGENT
  REPLACE HD_LUGENT2  WITH V_PED_HD.HP_LUGENT2 
  REPLACE HD_PEDIDO   WITH V_PED_HD.HP_NRO
  REPLACE HD_COD_CL   WITH V_PED_HD.HP_COD_CL
  REPLACE HD_DSCTO_P  WITH V_PED_HD.HP_DSCTO_P
  REPLACE HD_AREA     WITH V_PED_HD.HP_AREA 
ENDIF
       
ACTIVATE WINDOW NR_HD

SELECT V_DOC_HD
OKCANCEL=1

DO V_NR_M.SPR

SELECT V_DOC_HD
DO V_NR_VV.SPR

ACTIVATE SCREEN
SELECT V_PED_LN
SEEK V_PED_HD.HP_EMPR+V_PED_HD.HP_NRO
DO WHILE .NOT. EOF() .AND. V_PED_HD.HP_EMPR+V_PED_HD.HP_NRO=LP_EMPR+LP_NRO
  SELECT V_DOC_LN
  IF V_PED_LN.LP_ESTADO$'PI' .AND. LOCK()
    APPEND BLANK
    REPLACE LD_EMPR    WITH V_DOC_HD.HD_EMPR
    REPLACE LD_ALM     WITH V_DOC_HD.HD_ALM
    REPLACE LD_TIPO    WITH V_DOC_HD.HD_TIPO
    REPLACE LD_NRO     WITH V_DOC_HD.HD_NRO
    REPLACE LD_FECHA   WITH V_DOC_HD.HD_FECHA
    REPLACE LD_INSAL   WITH '2'
    REPLACE LD_COD_CL  WITH V_DOC_HD.HD_COD_CL
    REPLACE LD_COD_VEN WITH V_DOC_HD.HD_COD_VEN
    REPLACE LD_PART    WITH V_PED_LN.LP_PART
    REPLACE LD_LISTA   WITH V_PED_LN.LP_LISTA
    REPLACE LD_PRECIO  WITH V_PED_LN.LP_PRECIO
    REPLACE LD_PEDIDO  WITH V_PED_LN.LP_NRO
    
	***Verifica cantidades disponibles
    MI_CANT=GET_CANT(LD_ALM,LD_PART)
    IF MI_CANT<0
      MI_CANT=0
    ENDIF
  
    REPLACE LD_CANT    WITH IIF(V_PED_LN.LP_PEND<=MI_CANT,V_PED_LN.LP_PEND,MI_CANT)
    REPLACE LD_PESO    WITH PESO_U*LD_CANT
  ENDIF
  SELECT V_PED_LN
  SKIP
ENDDO
  
SELECT V_DOC_LN
SET RELATION TO LD_EMPR+LD_NRO+LD_PART INTO V_PED_LN ADDITIVE

GO TOP
BROWSE NODELETE NOAPPEND NOCLEAR ;
  KEY V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO ;
  FIELDS LD_PART:H='CODIGO':P='@S8 !!!!!!!!!!!!!!!':R, ;
  DESCR=V_ITEMS.IT_DESCR:W=.F., ;
  V_ITEMS.IT_UNIDAD:H='UNI.':W=.F., ;
  V_PED_LN.LP_PEND:H='PED.PEND.':P='999999.99':W=.F., ;
  LD_CANT:H='CANTIDAD':P='9999999.99':V=IIF(LD_CANT<=V_PED_LN.LP_CANT,.T.,.F.) ;
  .AND. CHK_CANT(LD_EMPR,LD_ALM,LD_PART):E='CANTIDAD ERRONEA', ;
  LD_PESO:H='PESO TOT.':P='999,999.99':R ;
  WINDOW PED_LN  ;
  TITLE '[F10] - ACEPTA NOTA   [ESC] - DESCARTA NOTA' 

IMPORTE=0

IF LASTKEY()<>27
  SEEK V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO
  DO WHILE .NOT. EOF() .AND. V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO=LD_EMPR+LD_TIPO+LD_NRO
    IF LD_CANT=0 
      IF LOCK()
         DELETE
      ENDIF
    ELSE
      IMPORTE=IMPORTE+ROUND(LD_CANT*LD_PRECIO,2)

      * ACTUALIZACION DE TABLA DE ITEMS EN ESTE LUGAR
      *
      IF LOCK('V_ITEMS')
         replace v_items.it_saldo with v_items.it_saldo-LD_CANT
         UNLOCK IN V_ITEMS
      ENDIF                      
      
      wcant=ld_cant
      
      SELECT V_PED_LN
      IF LOCK()
        REPLACE V_PED_LN.LP_PEND WITH V_PED_LN.LP_PEND-WCANT
 
        IF V_PED_LN.LP_PEND=0
          REPLACE V_PED_LN.LP_ESTADO WITH 'D'
        ELSE
          IF V_PED_LN.LP_PEND <> V_PED_LN.LP_CANT
              REPLACE V_PED_LN.LP_ESTADO WITH 'I'
          ENDIF  
        ENDIF

      ENDIF

      SELECT V_DOC_LN
    ENDIF
    SKIP
  ENDDO
ENDIF

SEEK V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO

IF LASTKEY()=27 .OR. EOF()
  SEEK V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO
  DO WHILE .NOT. EOF() .AND. V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO=LD_EMPR+LD_TIPO+LD_NRO
     IF LOCK()
       REPLACE LD_EMPR    WITH ' ', ;
               LD_ALM     WITH '  ', ;
               LD_TIPO    WITH ' ', ;
               LD_NRO     WITH SPACE(6), ;
               LD_FECHA   WITH {  /  /  }, ;
               LD_INSAL   WITH '  ', ;
               LD_COD_CL  WITH SPACE(6), ;
               LD_COD_VEN WITH '   ', ;
               LD_PART    WITH SPACE(15), ;
               LD_CANT WITH 0, ;
               LD_PESO WITH 0
        DELETE
    ENDIF
    SEEK V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO
  ENDDO

  SELECT V_DOC_HD
  IF LOCK()
    REPLACE HD_EMPR WITH ' ', ;
            HD_NRO WITH SPACE(6), ;
            HD_FECHA WITH {  /  /  }, ;
            HD_TIPO WITH ' ', ;
            HD_ALM WITH '  ', ;
            HD_OBS    WITH '', ;
            HD_PEDIDO WITH SPACE(6), ;
            HD_COD_CL WITH SPACE(6), ;
            HD_ESTADO WITH 'A', ;
            HD_USUARIO WITH USER
    DELETE
  ENDIF
  MENSAJE1=' NO SE GENERO NOTA DE REMISION '
  MENSAJE2='EL USUARIO PRESIONO [ESC] O NO HAY SALDOS PARA DESPACHAR'
  DO V_MENSAJ.SPR
ELSE
  NRO_NR=V_NEXT_N(EMPRESA,'NR')
  DO WHILE .NOT. EOF() .AND. V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO=LD_EMPR+LD_TIPO+LD_NRO
    IF LOCK()
      REPLACE LD_TIPO WITH 'R', LD_NRO WITH NRO_NR
    ENDIF
    SEEK V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO
  ENDDO  
  SELECT V_DOC_HD
  IF LOCK()
  	*** ADICONADO POR NTO 27.08.17
  	REPLACE HD_IMPORTE WITH IMPORTE

    REPLACE HD_TIPO WITH 'R', HD_NRO WITH NRO_NR
    
    * REEMPLAZA EL VALOR DE FLETES, EBALAJES Y OTROS DE FORMA PROPROCIONAL
    * AL TOTAL DELIMPORTE QUE HACE A ESTE DESPACHO
      
    REPLACE HD_PED_FLE WITH V_PED_HD.HP_FLETES*(IMPORTE/V_PED_HD.HP_IMPORTE)
    REPLACE HD_PED_EMB WITH V_PED_HD.HP_EMBALA*(IMPORTE/V_PED_HD.HP_IMPORTE)    
    REPLACE HD_PED_OTR WITH V_PED_HD.HP_OTROS *(IMPORTE/V_PED_HD.HP_IMPORTE)    
  ENDIF    
  * IMPRESION DE NOTA DE REMISION
  **MENSAJE1='LA NOTA DE REMISION SE IMPRIMIRA'
  **MENSAJE2='!!!! ALISTE LA IMPRESORA !!!!'
  **DO V_MENSAJ.SPR
  DO NR_IMPR
  IF TIPO_VEN='V.CO.'
    DO NR_FAC
  ENDIF
ENDIF

SELECT E
USE
SELECT F
USE

RELEASE WINDOW NR_HD

DO V_ONKEYS
SELECT V_PED_HD
RETURN

*-----------------*
FUNCTION CHK_VENDOR
*-----------------*
PARAMETER CODIGO
SELECT V_VENDOR
SEEK EMPRESA+CODIGO
IF FOUND()
  VENDEDOR=SUBSTR(VE_NOMBRE,1,20)
  @ 3,53 SAY '-'+SUBSTR(VE_NOMBRE,1,20)
  SELECT E
  RETURN .T.
ELSE
  @ 3,53 SAY 'VENDEDOR NO EXISTE'
  SELECT E
  RETURN .F.  
ENDIF    

*-----------------*
FUNCTION CHK_ALM
*-----------------*
PARAMETER ALM
SELECT 0 
USE V_ALM ORDER ALM
SEEK EMPRESA+ALM
IF FOUND()
  ALMACEN=SUBSTR(AL_DESCR,1,20)
  @ 3,14 SAY '-'+SUBSTR(AL_DESCR,1,20)
  USE
  SELECT E
  RETURN .T.
ELSE
  @ 3,14 SAY 'ALMACEN NO EXISTE'
  USE
  SELECT E
  RETURN .F.  
ENDIF    

*---------------*
FUNCTION GET_PESO
*---------------*
IF LOCK()
  REPLACE LD_PESO WITH PESO_U*LD_CANTIDAD
ENDIF
RETURN .T.

*---------------*
FUNCTION GET_CANT
*---------------*
PARAMETER EMPR,ALM,PART
  MI_REC=RECNO()
  
  IF V_EMPR.EM_CTRLSAL='N'  && SIN CONTROL DE SALDOS
    I_CANT=V_PED_LN.LP_PEND
    PESO_U=V_ITEMS.IT_PESO_T
    RETURN I_CANT
  ENDIF

**** PROCEDIMIENTO PARA OBTENER SALDOS DE ALMACEN ****
  I_CANT=0
  I_PESO=0
  SELECT V_DOC_LN
  SET ORDER TO KARDEX
  SEEK EMPR+PART
  DO WHILE .NOT. EOF() .AND. EMPR+PART=LD_EMPR+LD_PART
    IF LD_ALM=ALM
      DO CASE
        CASE LD_INSAL='1'
          I_CANT=I_CANT+LD_CANT
          I_PESO=I_PESO+LD_PESO
        CASE LD_INSAL='2'
          I_CANT=I_CANT-LD_CANT
          I_PESO=I_PESO-LD_PESO
      ENDCASE
    ENDIF
    SKIP
  ENDDO
  IF I_CANT=0
    PESO_U=0
  ELSE
    PESO_U=I_PESO/I_CANT
  ENDIF
  SELECT V_DOC_LN
  SET ORDER TO NR
  GO MI_REC
RETURN I_CANT

*---------------*
FUNCTION CHK_CANT
*---------------*
PARAMETER EMPR,ALM,PART

IF V_EMPR.EM_CTRLSAL='N'  && SIN CONTROL DE SALDOS
  REPLACE LD_PESO WITH V_ITEMS.IT_PESO_T*LD_CANT
  RETURN .T.
ENDIF

** CON CONTROL DE SALDOS

SELECT V_DOC_LN
MI_REC=RECNO()
I_CANT=0
I_PESO=0
A_CANT=LD_CANT
A_PESO=LD_PESO
IF LOCK()
  REPLACE LD_CANT WITH 0, LD_PESO WITH 0
ENDIF
SET ORDER TO KARDEX
SEEK EMPR+PART
DO WHILE .NOT. EOF() .AND. EMPR+PART=LD_EMPR+LD_PART
  IF LD_ALM=ALM
    DO CASE
      CASE LD_INSAL='1'
        I_CANT=I_CANT+LD_CANT
        I_PESO=I_PESO+LD_PESO
      CASE LD_INSAL='2'
        I_CANT=I_CANT-LD_CANT
        I_PESO=I_PESO-LD_PESO
    ENDCASE
  ENDIF
  SKIP
ENDDO
IF I_CANT<=0
  I_cant=0
  PESO_U=0
ELSE
  PESO_U=I_PESO/I_CANT
ENDIF
SELECT V_DOC_LN
SET ORDER TO NR
GO MI_REC
IF A_CANT<=I_CANT
  IF LOCK()
    REPLACE LD_CANT WITH A_CANT
    REPLACE LD_PESO WITH A_CANT*PESO_U
  ENDIF
  RETURN .T.
ELSE
  IF LOCK()
    REPLACE LD_CANT WITH I_CANT
    REPLACE LD_PESO WITH I_CANT*PESO_U
  ENDIF
  MENSAJE1='SALDO ACTUAL DEL PRODUCTO EN ALMACEN ES: '+TRANSFORM(I_CANT,'9,999,999.99')+' '+V_ITEMS.IT_UNIDAD
  MENSAJE2='NO SE PUEDE REMITIR LA CANTIDAD SOLICITADA !!!!'
  DO V_MENSAJ.SPR
  RETURN .T.
ENDIF

******************
PROCEDURE NR_IMPR
******************
    SELECT V_DOC_LN
    SET RELATION TO LD_EMPR+LD_PART INTO V_ITEMS
    SET ORDER TO NR
    SEEK V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO     
    TEMP_FILE='..\TMP\'+SYS(3)+'.NR'
    _PADVANCE='LINEFEED'
    REPORT FORM V_NR_FOR NOCONSOLE REST WHILE V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO=LD_EMPR+LD_TIPO+LD_NRO TO FILE (TEMP_FILE)
    _PADVANCE='FORMFEED'
* IMPRESORA
**    ! COPY &TEMP_FILE lpt1:
* COPIA A DIRECTORIO 
**    ! COPY &TEMP_FILE ..\PRT\.
    
    MENSAJE1='NOTA DE REMISION NRO.:'+V_DOC_HD.HD_NRO+' HA SIDO GENERADA'
    MENSAJE2=''
    DO V_MENSAJ.SPR
*    MODI COMM &TEMP_FILE NOEDIT
    DELETE FILE (TEMP_FILE)

RETURN

PROCEDURE NR_FAC
*******************
SELECT V_FAC_HD

APPEND BLANK
IF LOCK()
  REPLACE HF_EMPR    WITH V_DOC_HD.HD_EMPR, ;
          HF_NRO     WITH V_NEXT_N(EMPRESA,'FAC'), ;
          HF_NDOSIF  WITH NRODOSIF, ;
          HF_TIPO    WITH 'O', ;
          HF_USUARIO WITH USER, ;
          HF_FECHA   WITH DATE(), ;
          HF_FECHAV  WITH DATE(), ;
          HF_FACTOR  WITH TIPO_C, ;
          HF_ALM     WITH V_DOC_HD.HD_ALM, ;
          HF_COD_CL  WITH V_DOC_HD.HD_COD_CL, ;
          HF_COD_VEN WITH V_DOC_HD.HD_COD_VEN, ;
          HF_NOM_CL  WITH V_DOC_HD.HD_OBS, ;
          HF_OBS     WITH V_DOC_HD.HD_LUGENT, ;
          HF_PEDIDO  WITH V_DOC_HD.HD_PEDIDO, ;
          HF_NR      WITH V_DOC_HD.HD_NRO, ;
          HF_DSCTO_P WITH V_DOC_HD.HD_DSCTO_P, ;
          HF_FLETES  WITH V_DOC_HD.HD_PED_FLE, ;
          HF_EMBALA  WITH V_DOC_HD.HD_PED_EMB, ;          
          HF_OTROS   WITH V_DOC_HD.HD_PED_OTR, ;          
          HF_AREA    WITH V_DOC_HD.HD_AREA
ENDIF

SELECT V_DOC_HD
IF LOCK()
  REPLACE HD_ESTADO WITH 'F', HD_FACTURA WITH V_FAC_HD.HF_NRO, HD_NDOSIF WITH V_FAC_HD.HF_NDOSIF
  REPLACE HD_U_FAC WITH USER, HD_F_FAC WITH DATE()
ENDIF

SELECT 16
USE V_FAC_LN ORDER CORRE

IMPORTE=0

SELECT V_DOC_LN
SEEK V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO

DO WHILE .NOT. EOF() .AND. V_DOC_HD.HD_EMPR+V_DOC_HD.HD_TIPO+V_DOC_HD.HD_NRO=LD_EMPR+LD_TIPO+LD_NRO
  SELECT V_FAC_LN
  APPEND BLANK
  IF LOCK()
    REPLACE LF_EMPR    WITH V_FAC_HD.HF_EMPR, ;
            LF_TIPO    WITH V_FAC_HD.HF_TIPO, ;
            LF_NRO     WITH V_FAC_HD.HF_NRO, ;
			LF_NDOSIF  WITH V_FAC_HD.HF_NDOSIF, ;
            LF_FECHA   WITH V_FAC_HD.HF_FECHA, ;
            LF_COD_CL  WITH V_FAC_HD.HF_COD_CL, ;
            LF_PART    WITH V_DOC_LN.LD_PART, ;
            LF_CANT    WITH V_DOC_LN.LD_CANT, ;
            LF_LISTA   WITH V_DOC_LN.LD_LISTA, ;
            LF_PRECIO  WITH V_DOC_LN.LD_PRECIO, ;
            LF_PESO    WITH V_DOC_LN.LD_PESO

   IMPORTE=IMPORTE+ROUND(LF_CANT*LF_PRECIO,2)

  ENDIF
  SELECT V_DOC_LN
  IF LOCK()
    REPLACE LD_ESTADO WITH 'F'
  ENDIF
  SKIP
ENDDO

SELECT V_FAC_HD
IF LOCK()
  REPLACE HF_IMPORTE WITH IMPORTE
  REPLACE HF_NOM_CL  WITH V_CLIENT.CL_RAZON
  REPLACE HF_RUC     WITH V_CLIENT.CL_RUC
ENDIF

FLUSH

T_EMBALA=HF_EMBALA
T_FLETES=HF_FLETES
T_OTROS=HF_OTROS
T_DSCTO_M=0
T_DSCTO_P=HF_DSCTO_P
 
DO V_FAC_M2.SPR

IF LOCK()
  REPLACE HF_EMBALA  WITH T_EMBALA , ;
          HF_FLETES  WITH T_FLETES , ;
          HF_OTROS   WITH T_OTROS  , ;
          HF_DSCTO_M WITH T_DSCTO_M
ENDIF          
FLUSH    

*IMPRESION DE LA FACTURA
*MENSAJE1='LA FACTURA AL CONTADO SE IMPRIMIRA'
*MENSAJE2='!!!! ALISTE LA IMPRESORA !!!!'
*DO V_MENSAJ.SPR
*DO V_FACIMP

MENSAJE1='FACTURA NRO.:'+V_FAC_HD.HF_NRO+' HA SIDO GENERADA'
MENSAJE2='PUEDE IMPRIMIRLA DESDE MODULO DE FACTURAS.'
DO V_MENSAJ.SPR

SELECT V_FAC_HD
USE
SELECT V_FAC_LN
USE
RETURN

FUNCTION SUM_TOT
****************
@ 2,21 SAY TRANSFORM(ROUND((hF_importe*T_dscto_p)/100,2),'99,999,999.99')
@ 4,21 SAY TRANSFORM(HF_IMPORTE-round((hF_importe*T_dscto_p)/100,2),'99,999,999.99')
@ 9,21 SAY TRANSFORM(HF_IMPORTE-round((hF_importe*T_dscto_p)/100,2)+T_FLETES+T_EMBALA+T_OTROS,'99,999,999.99')
@12,21 SAY TRANSFORM(HF_IMPORTE-round((hF_importe*T_dscto_p)/100,2)+T_FLETES+T_EMBALA+T_OTROS-T_DSCTO_M,'99,999,999.99')
RETURN .T.

